<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BinIt - Waste Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300..700&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/css/styles.css" />
  </head>
  <body>
    <%- include('partials/header') %>

    <section class="min-h-screen bg-[#00c200] flex items-center justify-center">
      <div class="bg-white p-10 shadow-md w-full max-w-lg">
        <div class="mb-10">
          <h1 class="text-4xl grotesk">Schedule Pickup</h1>
          <p>Enter your details and proceed with your request</p>
        </div>
        <form id="scheduleForm" class="space-y-4">
          <div>
            <label class="block">Type of waste</label>
            <select
              id="truck_id"
              class="w-full p-2 border rounded-2xl"
              required
            >
              <option value="">Loading trucks...</option>
            </select>
          </div>

          <div>
            <label class="block">Pick-up location</label>
            <input
              type="text"
              id="pickup_location"
              placeholder="Enter your location"
              class="w-full p-2 border rounded-2xl"
              required
            />
          </div>

          <div>
            <label class="block">Pick-up date</label>
            <input
              type="date"
              id="pickup_date"
              class="w-full p-2 border rounded-2xl"
              required
            />
          </div>

          <div class="flex gap-2 w-full">
            <div class="w-full">
              <label class="block">Latitude</label>
              <input
                type="text"
                id="latitude"
                class="w-full p-2 border rounded-2xl"
                readonly
              />
            </div>
            <div class="w-full">
              <label class="block">Longitude</label>
              <input
                type="text"
                id="longitude"
                class="w-full p-2 border rounded-2xl"
                readonly
              />
            </div>
          </div>

          <div>
            <label class="block">Amount</label>
            <input
              type="number"
              id="amount"
              placeholder="Enter amount"
              class="w-full p-2 border rounded-2xl"
              readonly
            />
          </div>

          <button
            type="submit"
            class="w-full bg-[#00c200] hover:bg-green-600 text-white p-2 rounded-2xl"
          >
            Proceed
          </button>
        </form>

        <p id="message" class="text-red-500 mt-3"></p>
      </div>
    </section>

    <script>
      document.addEventListener('DOMContentLoaded', async () => {
        const truckDropdown = document.getElementById('truck_id');
        const amountField = document.getElementById('amount');
        const message = document.getElementById('message');

        try {
          // Fetch available trucks
          const truckResponse = await fetch('/api/trucks', {
            headers: {
              Authorization: `Bearer ${localStorage.getItem('token')}`,
            },
          });
          if (!truckResponse.ok) throw new Error('Failed to fetch trucks');

          const trucks = await truckResponse.json();
          truckDropdown.innerHTML =
            '<option value="">Select Waste Type</option>' +
            trucks
              .map(
                (truck) =>
                  `<option value="${truck._id}" data-price="${truck.price}">${truck.wasteName}</option>`
              )
              .join('');
        } catch (error) {
          message.textContent = 'Error loading trucks.';
        }

        // Auto-fill price when a truck is selected
        truckDropdown.addEventListener('change', function () {
          const selectedOption =
            truckDropdown.options[truckDropdown.selectedIndex];
          const price = selectedOption.getAttribute('data-price') || '';
          amountField.value = price;
        });

        // Get user's location (latitude & longitude)
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(
            (position) => {
              document.getElementById('latitude').value =
                position.coords.latitude;
              document.getElementById('longitude').value =
                position.coords.longitude;
            },
            () => {
              message.textContent = 'Location access denied.';
            }
          );
        }
      });

      // Handle Form Submission
      document
        .getElementById('scheduleForm')
        .addEventListener('submit', async (event) => {
          event.preventDefault();

          const pickupLocation =
            document.getElementById('pickup_location').value;
          const pickupDate = document.getElementById('pickup_date').value;
          const truckId = document.getElementById('truck_id').value;
          const amount = document.getElementById('amount').value;
          const lat = document.getElementById('latitude').value;
          const lng = document.getElementById('longitude').value;
          const message = document.getElementById('message');

          try {
            const response = await fetch('/api/schedule', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                Authorization: `Bearer ${localStorage.getItem('token')}`,
              },
              body: JSON.stringify({
                location: pickupLocation,
                pickupDate,
                truckId,
                amount,
                coordinates: {
                  lat,
                  lng,
                },
              }),
            });

            const data = await response.json();

            if (!response.ok) {
              message.textContent = data.message || 'Failed to schedule pickup';
              return;
            }

            message.textContent = 'Pickup scheduled successfully!';
            message.classList.remove('text-red-500');
            message.classList.add('text-green-500');

            // Redirect to user dashboard after 2 seconds
            setTimeout(() => {
              window.location.href = '/request-complete';
            }, 2000);
          } catch (error) {
            console.log(error);

            message.textContent = 'Something went wrong. Please try again.';
          }
        });
    </script>

    <%- include('partials/footer') %>
  </body>
</html>
