<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300..700&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/css/styles.css" />
    <script
      async
      defer
      src="https://maps.googleapis.com/maps/api/js?key=&callback=initMap"
    ></script>
  </head>
  <body class="bg-gray-100 font-sans">
    <div class="flex min-h-screen">
      <%- include('../partials/admin-sidebar') %>

      <!-- Main Content -->
      <main class="flex w-full">
        <div class="flex flex-col flex-[1] p-6 bg-[#ECEEF6]">
          <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-bold">Ongoing Collection</h2>
            <h2 class="text-2xl font-bold text-[#ACACAC]">Completed</h2>
          </div>

          <div class="flex flex-col">
            <div class="grid grid-cols-1 gap-4 mb-6">
              <!-- Request Info -->
              <div
                id="request-info"
                class="bg-white p-8 rounded-lg shadow-md col-span-2"
              >
                <div class="flex justify-between mb-4">
                  <div>
                    <p>Request Number</p>
                    <p id="request-number" class="font-bold mb-3">Loading...</p>
                    <p id="waste-type" class="text-gray-400">Loading...</p>
                  </div>
                  <div>
                    <img src="/images/Recycling_Truck.png" class="w-20" />
                  </div>
                </div>
                <hr />

                <ol class="relative border-s border-[#E3E3E3] mt-6">
                  <li class="mb-10 ms-6">
                    <span
                      class="absolute flex items-center justify-center w-6 h-6 rounded-full -start-3 ring-8 ring-white"
                    >
                      <img src="/images/Ellipse45.png" />
                    </span>
                    <h3
                      id="pickup-location"
                      class="text-lg font-semibold text-gray-900"
                    >
                      Loading...
                    </h3>
                  </li>
                  <li class="mb-10 ms-6">
                    <span
                      class="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -start-3 ring-8 ring-white"
                    >
                      <img src="/images/location.png" />
                    </span>
                    <h3
                      id="dropoff-location"
                      class="text-lg font-semibold text-gray-900"
                    >
                      Loading...
                    </h3>
                  </li>
                </ol>

                <hr />

                <div class="flex justify-between my-4">
                  <div class="flex gap-2 items-center">
                    <img
                      id="client-avatar"
                      src="/images/Ellipse47.png"
                      class="h-20 w-20"
                    />
                    <div>
                      <p class="text-[#B0B0B0]">Client</p>
                      <p id="client-name" class="font-bold">Loading...</p>
                      <p id="client-company">Loading...</p>
                    </div>
                  </div>
                  <div class="flex gap-4 items-center">
                    <button class="bg-[#F7F5FF] p-3 rounded-xl">
                      <img src="/images/call.png" class="w-8 h-8" />
                    </button>
                    <button class="bg-[#F7F5FF] p-3 rounded-xl">
                      <img src="/images/message-text.png" class="w-8 h-8" />
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Google Maps -->
        <div class="flex flex-col flex-[2]">
          <div id="map" style="width: 100%; height: 100%"></div>
          <!-- <iframe
            id="mapFrame"
            src=""
            class="w-full h-full"
            style="border: 0"
            allowfullscreen
            loading="lazy"
            referrerpolicy="no-referrer-when-downgrade"
          ></iframe> -->
        </div>
      </main>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', async () => {
        try {
          const response = await fetch('/api/latest-request', {
            headers: {
              'Content-Type': 'application/json',
              Authorization: `Bearer ${localStorage.getItem('token')}`,
            },
          });
          const data = await response.json();

          if (!data || !data._id) {
            document.getElementById('request-info').innerHTML =
              '<p>No ongoing collections.</p>';
            return;
          }

          const truckLocation = {
            lat: data.truckId.coordinates.lat,
            lng: data.truckId.coordinates.lng,
          };
          const pickupLocation = {
            lat: +data.requestId.coordinates.lat,
            lng: +data.requestId.coordinates.lng,
          };

          // Initialize the map centered at the truck location
          const map = new google.maps.Map(document.getElementById('map'), {
            zoom: 12,
            center: truckLocation,
          });

          // Add Markers for Truck and User
          const truckMarker = new google.maps.Marker({
            position: truckLocation,
            map: map,
            title: 'Truck Location',
            icon: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', // Truck icon
          });

          const userMarker = new google.maps.Marker({
            position: pickupLocation,
            map: map,
            title: 'Pickup Location',
            icon: 'https://maps.google.com/mapfiles/ms/icons/red-dot.png', // User icon
          });

          // Initialize Directions Service & Renderer
          const directionsService = new google.maps.DirectionsService();
          const directionsRenderer = new google.maps.DirectionsRenderer({
            suppressMarkers: true, // We already added custom markers
          });
          directionsRenderer.setMap(map);

          // Create floating card for distance & time
          const infoCard = document.createElement('div');
          infoCard.setAttribute(
            'style',
            'position:absolute; top:70px; left:56%; transform:translateX(-50%); background:white; padding:10px 20px; border-radius:8px; box-shadow:0px 2px 6px rgba(0,0,0,0.2); font-size:16px; font-weight:bold; z-index:999;'
          );
          infoCard.innerHTML = 'Calculating route...';
          document.body.appendChild(infoCard);

          // Request the route from truck to user
          directionsService.route(
            {
              origin: truckLocation,
              destination: pickupLocation,
              travelMode: google.maps.TravelMode.DRIVING,
            },
            (response, status) => {
              if (status === 'OK') {
                directionsRenderer.setDirections(response);

                // Adjust map to fit both markers
                const bounds = new google.maps.LatLngBounds();
                bounds.extend(truckLocation);
                bounds.extend(pickupLocation);
                map.fitBounds(bounds);

                // Extract distance and time from response
                const route = response.routes[0].legs[0];
                const distance = route.distance.text; // e.g., "5.2 miles"
                const duration = route.duration.text; // e.g., "12 mins"

                // Update floating card with details
                infoCard.innerHTML = `üöõ Estimated Distance: <strong>${distance}</strong> <br> ‚è≥ Time: <strong>${duration}</strong>`;
              } else {
                console.error('Directions request failed due to ' + status);
                infoCard.innerHTML = 'Failed to calculate route.';
              }
            }
          );

          // Populate request data
          document.getElementById('request-number').textContent = data._id;
          document.getElementById('waste-type').textContent =
            data.truckId.wasteName || 'Unknown';
          document.getElementById('pickup-location').textContent =
            data.truckId.location || 'Unknown';
          document.getElementById('dropoff-location').textContent =
            data.requestId?.location || 'Unknown';

          // Populate client info
          if (data.userId) {
            document.getElementById('client-name').textContent =
              data.userId.name;
            document.getElementById('client-company').textContent =
              data.userId.email || 'N/A';
            document.getElementById('client-avatar').src =
              data.userId.profilePic || '/images/Ellipse47.png';
          }

          // // Set Google Maps location (if available)
          // if (data.coordinates) {
          //   document.getElementById(
          //     'google-map'
          //   ).src = `https://www.google.com/maps/embed/v1/place?key=&q=${data.pickupCoordinates.lat},${data.pickupCoordinates.lng}`;
          // }
        } catch (error) {
          console.error('Error fetching latest request:', error);
        }
      });
    </script>
  </body>
</html>
